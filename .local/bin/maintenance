#!/bin/bash
set -Eeuo pipefail
trap 'echo "${0}: Error on line ${LINENO}: ${BASH_COMMAND}" >&2' ERR

# inspired by: https://wiki.archlinux.org/title/System_maintenance

yn() {
	while :; do
		printf '%s [%s/%s] ' "${1}" "$(locale yesstr)" "$(locale nostr)"
		read -r 'response'
		printf '%s' "${response}" | grep -Eq "$(locale yesexpr)" && return 0
		printf '%s' "${response}" | grep -Eq "$(locale noexpr)" && return 1
	done
}

separator() {
	yes '-' | head --lines "$(tput cols)" | tr --delete '\n' || true
	echo
}

yn 'show pacreport?' &&
	sudo pacreport --missing-files | less

separator

number_of_pending_updates="$(checkupdates | wc --lines || true)"
((number_of_pending_updates >= 1)) && (
	yn "${number_of_pending_updates} packages has pending updates. update packages?" &&
		sudo pacman -Syu || true

	separator
)

number_of_pac_files="$(pacdiff --output | wc --lines)"
((number_of_pac_files >= 1)) && (
	yn "${number_of_pac_files} .pac* files need to be handled. run pacdiff?" &&
		pacdiff --sudo --threeway

	separator
)

number_orphan_packages=$(pacman -Qdq | pacman -Rsu --print - | grep --count --invert-match '^ there is nothing to do$' || true)
((number_orphan_packages >= 1)) && (
	yn "${number_orphan_packages} orphan packages. uninstall?" && (
		pacman -Qdq | pacman -Rsu --print --print-format '%n' - | sudo pacman -Rsu - || true
	)

	separator
)

yn 'update rust?' && (
	rustup self upgrade-data
	rustup update
)

separator

[ -d "$(uv cache dir)" ] && (
	yn "remove uv cache ($(du --summarize --human-readable "$(uv cache dir)")})" &&
		uv cache clean

	separator
)

yn 'update neovim packages?' && (
	nvim --headless -c "lua
		MiniDeps.later(function()
			MiniDeps.clean(nil, { force = true })
			MiniDeps.update(nil, { force = true })
			vim.cmd.exit()
		end)"
	echo
)

separator

number_packages_need_rebuilt="$(checkrebuild | wc --lines)"
((number_packages_need_rebuilt >= 1)) && (
	echo "${number_packages_need_rebuilt} packages need to be rebuilt"
	checkrebuild -v

	separator
)

fwupdmgr refresh --force 1>/dev/null 2>/dev/null
number_devices_with_firmware_updates="$(fwupdmgr get-updates --json | jq '.Devices | length')"
((number_devices_with_firmware_updates >= 1)) && (
	yn "${number_devices_with_firmware_updates} devices has firwmare updates. Run fwupdmgr?" &&
		fwupdmgr update

	separator
)

yn 'check services?' &&
	sudo checkservices -AlfPrsumZ

separator

[ ! -d "/usr/lib/modules/$(uname --kernel-release)/" ] &&
	echo "the running kernel ($(uname --kernel-release)) was not found in /usr/lib/modules/"

yn 'reboot?' &&
	systemctl reboot

separator

echo 'all done'
